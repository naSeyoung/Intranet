<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory-->
	<resources mapping="/resources/**" location="/resources/" />  
	<!--  <resources mapping="/assets/**" location="/assets/" /> -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 객체를 자동으로 만들 기본 패키지 지정: 기본패키지 아래의 특정하게 정의해 놓은 클래스를 자동 생성한다.  -->
<context:component-scan base-package="net.ezens" /> <!-- com.legacy.xx로  패키지 생성을 했을 경우 legacy까지만 base-package로 설정 --> 
<context:component-scan base-package="net.ezens.Intranet" /> <!-- com.legacy.xx로  패키지 생성을 했을 경우 legacy까지만 base-package로 설정 --> 

<!-- CKEDITOR 파일 업로드한 이미지가 저장될 경로 매핑 추가  -->
<!-- 업로드 패스 설정 -->
<beans:bean class="java.lang.String" id="uploadPath" >
	<beans:constructor-arg value="C:\Users\SEYOUNG\git\Intranet\src\main\webapp\resources"></beans:constructor-arg>
</beans:bean>
<!-- MultiPartResover -->
<beans:bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
	<beans:property name="maxUploadSize" value="10485760"/>
</beans:bean>

